{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","prevProps","name","props","console","log","clearInterval","setState","toLocaleTimeString","className","React","Component","App","isClockVisible","clockName","Math","trunc","random","showClock","hideClock","randomName","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,G,YAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OARN,gCAYE,SAAmBC,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DL,KAAKM,MAAMD,SAfhF,kCAmBE,WACEI,cAAcT,KAAKC,WApBvB,kBAuBE,WACED,KAAKU,SAAS,CACZZ,KAAM,IAAIC,OAGZQ,QAAQC,IAAIR,KAAKH,MAAMC,KAAKa,wBA5BhC,oBA+BE,WACE,OACE,uBAAGC,UAAU,SAAb,wBACoBZ,KAAKH,MAAMC,KAAKa,2BAlC1C,GAA2BE,IAAMC,YC2DlBC,E,4MAzDblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAG7BC,UAAY,WACV,EAAKX,SAAS,CACZM,gBAAgB,K,EAIpBM,UAAY,WACV,EAAKZ,SAAS,CACZM,gBAAgB,K,EAIpBO,WAAa,WACX,EAAKb,SAAS,CACZO,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAI/B,WACE,OACE,oCACE,yBAAKR,UAAU,OACb,2CACA,kDAAoBZ,KAAKH,MAAMoB,YAC9BjB,KAAKH,MAAMmB,gBAAkB,kBAAC,EAAD,CAAOX,KAAML,KAAKH,MAAMoB,YACtD,4BACEO,KAAK,SACLZ,UAAU,SACVa,QAASzB,KAAKqB,WAHhB,cAOA,4BACEG,KAAK,SACLZ,UAAU,SACVa,QAASzB,KAAKsB,WAHhB,cAOA,4BACEE,KAAK,SACLZ,UAAU,SACVa,QAASzB,KAAKuB,YAHhB,yB,GA7CQV,IAAMC,WCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fd51f990.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './clock.scss';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    return (\n      <p className=\"timer\">\n        {`Current time: ${this.state.date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.trunc(Math.random() * 1000),\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  randomName = () => {\n    this.setState({\n      clockName: Math.trunc(Math.random() * 1000),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          <h2>{`Clock name: ${this.state.clockName}`}</h2>\n          {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.randomName}\n          >\n            Set random name\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}